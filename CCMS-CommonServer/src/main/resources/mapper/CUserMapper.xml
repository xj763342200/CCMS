<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.dao.CUserMapper">
  <resultMap id="BaseResultMap" type="com.zl.domain.CUser">
    <id column="USER_ID" jdbcType="NUMERIC" property="userId" />
    <result column="USERNAME" jdbcType="VARCHAR" property="username" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
    <result column="PHONE" jdbcType="VARCHAR" property="phone" />
    <result column="EMAIL" jdbcType="VARCHAR" property="email" />
    <result column="REAL_NAME" jdbcType="VARCHAR" property="realName" />
    <result column="BIRTHDAY" jdbcType="TIMESTAMP" property="birthday" />
    <result column="RECENTLY_LANDED" jdbcType="TIMESTAMP" property="recentlyLanded" />
    <result column="REGISTER_TIME" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="STATUS" jdbcType="NUMERIC" property="status" />
    <result column="FACE" jdbcType="VARCHAR" property="face" />
    <result column="TYPE" jdbcType="NUMERIC" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USER_ID, USERNAME, PASSWORD, PHONE, EMAIL, REAL_NAME, BIRTHDAY, RECENTLY_LANDED, 
    REGISTER_TIME, STATUS, FACE, TYPE
  </sql>
  <select id="selectByExample" parameterType="com.zl.domain.CUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from C_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from C_USER
    where USER_ID = #{userId,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from C_USER
    where USER_ID = #{userId,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.zl.domain.CUserExample">
    delete from C_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zl.domain.CUser">
    insert into C_USER (USER_ID, USERNAME, PASSWORD, 
      PHONE, EMAIL, REAL_NAME, 
      BIRTHDAY, RECENTLY_LANDED, REGISTER_TIME, 
      STATUS, FACE, TYPE)
    values (#{userId,jdbcType=NUMERIC}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{birthday,jdbcType=TIMESTAMP}, #{recentlyLanded,jdbcType=TIMESTAMP}, #{registerTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=NUMERIC}, #{face,jdbcType=VARCHAR}, #{type,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.zl.domain.CUser">
    insert into C_USER
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="username != null">
        USERNAME,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="email != null">
        EMAIL,
      </if>
      <if test="realName != null">
        REAL_NAME,
      </if>
      <if test="birthday != null">
        BIRTHDAY,
      </if>
      <if test="recentlyLanded != null">
        RECENTLY_LANDED,
      </if>
      <if test="registerTime != null">
        REGISTER_TIME,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="face != null">
        FACE,
      </if>
      <if test="type != null">
        TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=NUMERIC},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="recentlyLanded != null">
        #{recentlyLanded,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=NUMERIC},
      </if>
      <if test="face != null">
        #{face,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zl.domain.CUserExample" resultType="java.lang.Long">
    select count(*) from C_USER
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update C_USER
    <set>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=NUMERIC},
      </if>
      <if test="record.username != null">
        USERNAME = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        EMAIL = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        REAL_NAME = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        BIRTHDAY = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recentlyLanded != null">
        RECENTLY_LANDED = #{record.recentlyLanded,jdbcType=TIMESTAMP},
      </if>
      <if test="record.registerTime != null">
        REGISTER_TIME = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=NUMERIC},
      </if>
      <if test="record.face != null">
        FACE = #{record.face,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        TYPE = #{record.type,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update C_USER
    set USER_ID = #{record.userId,jdbcType=NUMERIC},
      USERNAME = #{record.username,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=VARCHAR},
      EMAIL = #{record.email,jdbcType=VARCHAR},
      REAL_NAME = #{record.realName,jdbcType=VARCHAR},
      BIRTHDAY = #{record.birthday,jdbcType=TIMESTAMP},
      RECENTLY_LANDED = #{record.recentlyLanded,jdbcType=TIMESTAMP},
      REGISTER_TIME = #{record.registerTime,jdbcType=TIMESTAMP},
      STATUS = #{record.status,jdbcType=NUMERIC},
      FACE = #{record.face,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zl.domain.CUser">
    update C_USER
    <set>
      <if test="username != null">
        USERNAME = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        REAL_NAME = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="recentlyLanded != null">
        RECENTLY_LANDED = #{recentlyLanded,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null">
        REGISTER_TIME = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=NUMERIC},
      </if>
      <if test="face != null">
        FACE = #{face,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        TYPE = #{type,jdbcType=NUMERIC},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zl.domain.CUser">
    update C_USER
    set USERNAME = #{username,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      REAL_NAME = #{realName,jdbcType=VARCHAR},
      BIRTHDAY = #{birthday,jdbcType=TIMESTAMP},
      RECENTLY_LANDED = #{recentlyLanded,jdbcType=TIMESTAMP},
      REGISTER_TIME = #{registerTime,jdbcType=TIMESTAMP},
      STATUS = #{status,jdbcType=NUMERIC},
      FACE = #{face,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=NUMERIC}
    where USER_ID = #{userId,jdbcType=NUMERIC}
  </update>
</mapper>