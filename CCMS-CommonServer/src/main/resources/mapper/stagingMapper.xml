<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.dao.stagingMapper">
  <resultMap id="BaseResultMap" type="com.zl.domain.staging">
    <id column="ID" jdbcType="NUMERIC" property="id" />
    <result column="TOTALMONEY" jdbcType="NUMERIC" property="totalmoney" />
    <result column="TOTALMONTH" jdbcType="NUMERIC" property="totalmonth" />
    <result column="RATE" jdbcType="NUMERIC" property="rate" />
    <result column="MONTHSEND" jdbcType="NUMERIC" property="monthsend" />
    <result column="ENDSEND_MONTHNUM" jdbcType="NUMERIC" property="endsendMonthnum" />
    <result column="REMINDNUM" jdbcType="NUMERIC" property="remindnum" />
    <result column="CREATETIME" jdbcType="TIMESTAMP" property="createtime" />
    <result column="UPDATETIME" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="IF_DELETE" jdbcType="NUMERIC" property="ifDelete" />
    <result column="CRED_ID" jdbcType="NUMERIC" property="credId" />
    <result column="SURPLUSMONEY" jdbcType="NUMERIC" property="surplusmoney" />
    <result column="SURPLUSMONTH" jdbcType="NUMERIC" property="surplusmonth" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, TOTALMONEY, TOTALMONTH, RATE, MONTHSEND, ENDSEND_MONTHNUM, REMINDNUM, CREATETIME, 
    UPDATETIME, IF_DELETE, CRED_ID, SURPLUSMONEY, SURPLUSMONTH
  </sql>
  <select id="selectByExample" parameterType="com.zl.domain.stagingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from STAGING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from STAGING
    where ID = #{id,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from STAGING
    where ID = #{id,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.zl.domain.stagingExample">
    delete from STAGING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zl.domain.staging">
    insert into STAGING (ID, TOTALMONEY, TOTALMONTH, 
      RATE, MONTHSEND, ENDSEND_MONTHNUM, 
      REMINDNUM, CREATETIME, UPDATETIME, 
      IF_DELETE, CRED_ID, SURPLUSMONEY, 
      SURPLUSMONTH)
    values (#{id,jdbcType=NUMERIC}, #{totalmoney,jdbcType=NUMERIC}, #{totalmonth,jdbcType=NUMERIC}, 
      #{rate,jdbcType=NUMERIC}, #{monthsend,jdbcType=NUMERIC}, #{endsendMonthnum,jdbcType=NUMERIC}, 
      #{remindnum,jdbcType=NUMERIC}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{ifDelete,jdbcType=NUMERIC}, #{credId,jdbcType=NUMERIC}, #{surplusmoney,jdbcType=NUMERIC}, 
      #{surplusmonth,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.zl.domain.staging">
    insert into STAGING
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="totalmoney != null">
        TOTALMONEY,
      </if>
      <if test="totalmonth != null">
        TOTALMONTH,
      </if>
      <if test="rate != null">
        RATE,
      </if>
      <if test="monthsend != null">
        MONTHSEND,
      </if>
      <if test="endsendMonthnum != null">
        ENDSEND_MONTHNUM,
      </if>
      <if test="remindnum != null">
        REMINDNUM,
      </if>
      <if test="createtime != null">
        CREATETIME,
      </if>
      <if test="updatetime != null">
        UPDATETIME,
      </if>
      <if test="ifDelete != null">
        IF_DELETE,
      </if>
      <if test="credId != null">
        CRED_ID,
      </if>
      <if test="surplusmoney != null">
        SURPLUSMONEY,
      </if>
      <if test="surplusmonth != null">
        SURPLUSMONTH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=NUMERIC},
      </if>
      <if test="totalmoney != null">
        #{totalmoney,jdbcType=NUMERIC},
      </if>
      <if test="totalmonth != null">
        #{totalmonth,jdbcType=NUMERIC},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=NUMERIC},
      </if>
      <if test="monthsend != null">
        #{monthsend,jdbcType=NUMERIC},
      </if>
      <if test="endsendMonthnum != null">
        #{endsendMonthnum,jdbcType=NUMERIC},
      </if>
      <if test="remindnum != null">
        #{remindnum,jdbcType=NUMERIC},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="ifDelete != null">
        #{ifDelete,jdbcType=NUMERIC},
      </if>
      <if test="credId != null">
        #{credId,jdbcType=NUMERIC},
      </if>
      <if test="surplusmoney != null">
        #{surplusmoney,jdbcType=NUMERIC},
      </if>
      <if test="surplusmonth != null">
        #{surplusmonth,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zl.domain.stagingExample" resultType="java.lang.Long">
    select count(*) from STAGING
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update STAGING
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=NUMERIC},
      </if>
      <if test="record.totalmoney != null">
        TOTALMONEY = #{record.totalmoney,jdbcType=NUMERIC},
      </if>
      <if test="record.totalmonth != null">
        TOTALMONTH = #{record.totalmonth,jdbcType=NUMERIC},
      </if>
      <if test="record.rate != null">
        RATE = #{record.rate,jdbcType=NUMERIC},
      </if>
      <if test="record.monthsend != null">
        MONTHSEND = #{record.monthsend,jdbcType=NUMERIC},
      </if>
      <if test="record.endsendMonthnum != null">
        ENDSEND_MONTHNUM = #{record.endsendMonthnum,jdbcType=NUMERIC},
      </if>
      <if test="record.remindnum != null">
        REMINDNUM = #{record.remindnum,jdbcType=NUMERIC},
      </if>
      <if test="record.createtime != null">
        CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ifDelete != null">
        IF_DELETE = #{record.ifDelete,jdbcType=NUMERIC},
      </if>
      <if test="record.credId != null">
        CRED_ID = #{record.credId,jdbcType=NUMERIC},
      </if>
      <if test="record.surplusmoney != null">
        SURPLUSMONEY = #{record.surplusmoney,jdbcType=NUMERIC},
      </if>
      <if test="record.surplusmonth != null">
        SURPLUSMONTH = #{record.surplusmonth,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update STAGING
    set ID = #{record.id,jdbcType=NUMERIC},
      TOTALMONEY = #{record.totalmoney,jdbcType=NUMERIC},
      TOTALMONTH = #{record.totalmonth,jdbcType=NUMERIC},
      RATE = #{record.rate,jdbcType=NUMERIC},
      MONTHSEND = #{record.monthsend,jdbcType=NUMERIC},
      ENDSEND_MONTHNUM = #{record.endsendMonthnum,jdbcType=NUMERIC},
      REMINDNUM = #{record.remindnum,jdbcType=NUMERIC},
      CREATETIME = #{record.createtime,jdbcType=TIMESTAMP},
      UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP},
      IF_DELETE = #{record.ifDelete,jdbcType=NUMERIC},
      CRED_ID = #{record.credId,jdbcType=NUMERIC},
      SURPLUSMONEY = #{record.surplusmoney,jdbcType=NUMERIC},
      SURPLUSMONTH = #{record.surplusmonth,jdbcType=NUMERIC}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zl.domain.staging">
    update STAGING
    <set>
      <if test="totalmoney != null">
        TOTALMONEY = #{totalmoney,jdbcType=NUMERIC},
      </if>
      <if test="totalmonth != null">
        TOTALMONTH = #{totalmonth,jdbcType=NUMERIC},
      </if>
      <if test="rate != null">
        RATE = #{rate,jdbcType=NUMERIC},
      </if>
      <if test="monthsend != null">
        MONTHSEND = #{monthsend,jdbcType=NUMERIC},
      </if>
      <if test="endsendMonthnum != null">
        ENDSEND_MONTHNUM = #{endsendMonthnum,jdbcType=NUMERIC},
      </if>
      <if test="remindnum != null">
        REMINDNUM = #{remindnum,jdbcType=NUMERIC},
      </if>
      <if test="createtime != null">
        CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="ifDelete != null">
        IF_DELETE = #{ifDelete,jdbcType=NUMERIC},
      </if>
      <if test="credId != null">
        CRED_ID = #{credId,jdbcType=NUMERIC},
      </if>
      <if test="surplusmoney != null">
        SURPLUSMONEY = #{surplusmoney,jdbcType=NUMERIC},
      </if>
      <if test="surplusmonth != null">
        SURPLUSMONTH = #{surplusmonth,jdbcType=NUMERIC},
      </if>
    </set>
    where ID = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zl.domain.staging">
    update STAGING
    set TOTALMONEY = #{totalmoney,jdbcType=NUMERIC},
      TOTALMONTH = #{totalmonth,jdbcType=NUMERIC},
      RATE = #{rate,jdbcType=NUMERIC},
      MONTHSEND = #{monthsend,jdbcType=NUMERIC},
      ENDSEND_MONTHNUM = #{endsendMonthnum,jdbcType=NUMERIC},
      REMINDNUM = #{remindnum,jdbcType=NUMERIC},
      CREATETIME = #{createtime,jdbcType=TIMESTAMP},
      UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
      IF_DELETE = #{ifDelete,jdbcType=NUMERIC},
      CRED_ID = #{credId,jdbcType=NUMERIC},
      SURPLUSMONEY = #{surplusmoney,jdbcType=NUMERIC},
      SURPLUSMONTH = #{surplusmonth,jdbcType=NUMERIC}
    where ID = #{id,jdbcType=NUMERIC}
  </update>
</mapper>