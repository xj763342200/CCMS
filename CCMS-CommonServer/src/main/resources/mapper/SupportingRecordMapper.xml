<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zl.dao.SupportingRecordMapper">
  <resultMap id="BaseResultMap" type="com.zl.domain.SupportingRecord">
    <id column="SUPPORTING_ID" jdbcType="NUMERIC" property="supportingId" />
    <result column="USER_ID" jdbcType="NUMERIC" property="userId" />
    <result column="CARD_NUMBER" jdbcType="VARCHAR" property="cardNumber" />
    <result column="PHONE" jdbcType="NUMERIC" property="phone" />
    <result column="ADDRESS" jdbcType="VARCHAR" property="address" />
    <result column="REPLACE_DATE" jdbcType="TIMESTAMP" property="replaceDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    SUPPORTING_ID, USER_ID, CARD_NUMBER, PHONE, ADDRESS, REPLACE_DATE
  </sql>
  <select id="selectByExample" parameterType="com.zl.domain.SupportingRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SUPPORTING_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from SUPPORTING_RECORD
    where SUPPORTING_ID = #{supportingId,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from SUPPORTING_RECORD
    where SUPPORTING_ID = #{supportingId,jdbcType=NUMERIC}
  </delete>
  <delete id="deleteByExample" parameterType="com.zl.domain.SupportingRecordExample">
    delete from SUPPORTING_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zl.domain.SupportingRecord">
    insert into SUPPORTING_RECORD (SUPPORTING_ID, USER_ID, CARD_NUMBER, 
      PHONE, ADDRESS, REPLACE_DATE
      )
    values (#{supportingId,jdbcType=NUMERIC}, #{userId,jdbcType=NUMERIC}, #{cardNumber,jdbcType=VARCHAR}, 
      #{phone,jdbcType=NUMERIC}, #{address,jdbcType=VARCHAR}, #{replaceDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zl.domain.SupportingRecord">
    insert into SUPPORTING_RECORD
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="supportingId != null">
        SUPPORTING_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="cardNumber != null">
        CARD_NUMBER,
      </if>
      <if test="phone != null">
        PHONE,
      </if>
      <if test="address != null">
        ADDRESS,
      </if>
      <if test="replaceDate != null">
        REPLACE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="supportingId != null">
        #{supportingId,jdbcType=NUMERIC},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=NUMERIC},
      </if>
      <if test="cardNumber != null">
        #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=NUMERIC},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="replaceDate != null">
        #{replaceDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zl.domain.SupportingRecordExample" resultType="java.lang.Long">
    select count(*) from SUPPORTING_RECORD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update SUPPORTING_RECORD
    <set>
      <if test="record.supportingId != null">
        SUPPORTING_ID = #{record.supportingId,jdbcType=NUMERIC},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=NUMERIC},
      </if>
      <if test="record.cardNumber != null">
        CARD_NUMBER = #{record.cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        PHONE = #{record.phone,jdbcType=NUMERIC},
      </if>
      <if test="record.address != null">
        ADDRESS = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.replaceDate != null">
        REPLACE_DATE = #{record.replaceDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update SUPPORTING_RECORD
    set SUPPORTING_ID = #{record.supportingId,jdbcType=NUMERIC},
      USER_ID = #{record.userId,jdbcType=NUMERIC},
      CARD_NUMBER = #{record.cardNumber,jdbcType=VARCHAR},
      PHONE = #{record.phone,jdbcType=NUMERIC},
      ADDRESS = #{record.address,jdbcType=VARCHAR},
      REPLACE_DATE = #{record.replaceDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zl.domain.SupportingRecord">
    update SUPPORTING_RECORD
    <set>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=NUMERIC},
      </if>
      <if test="cardNumber != null">
        CARD_NUMBER = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        PHONE = #{phone,jdbcType=NUMERIC},
      </if>
      <if test="address != null">
        ADDRESS = #{address,jdbcType=VARCHAR},
      </if>
      <if test="replaceDate != null">
        REPLACE_DATE = #{replaceDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where SUPPORTING_ID = #{supportingId,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zl.domain.SupportingRecord">
    update SUPPORTING_RECORD
    set USER_ID = #{userId,jdbcType=NUMERIC},
      CARD_NUMBER = #{cardNumber,jdbcType=VARCHAR},
      PHONE = #{phone,jdbcType=NUMERIC},
      ADDRESS = #{address,jdbcType=VARCHAR},
      REPLACE_DATE = #{replaceDate,jdbcType=TIMESTAMP}
    where SUPPORTING_ID = #{supportingId,jdbcType=NUMERIC}
  </update>
</mapper>